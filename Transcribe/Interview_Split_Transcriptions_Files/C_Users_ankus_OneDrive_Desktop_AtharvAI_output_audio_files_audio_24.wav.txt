Transcription for C:\Users\ankus\OneDrive\Desktop\AtharvAI\output_audio_files\audio_24.wav:
how are you doing today hi Matt I'm good thanks for thanks for your time I'm glad to be here cool well I think we can just jump right in we have a really juicy algorithm problem that I've asked at least 50 times so I've got some pretty calibrated expectations for it and it's there's a lot of interesting talking points on it but enough about that tell me a little bit about yourself what's your favorite project that you work that you've worked on my biggest problem is a YouTube video player I designed it to change the comment system it's rather than like comments or a live chat I got to combine it to you online can you tell me about any interesting challenge you faced while working on that feature the biggest challenge was just getting the timestamp out of the video player cuz it's kind of like a vanilla domination problem but then you have to pass it in two different reactions I had to like look at lots of different stuff okay so that the back end was pretty easy you know the API figuring out the how to how to send the relationship between all the messages to the front and that was pretty straightforward for you yeah I was just added the timestamp as well characteristic on the comments and that I handle the the morning and the display of the comments on the front end and so how was what did you use for your front end like UI aircraft products cool all right well thanks for the context and I think we can just we can jump into the the code so if you if you don't mind sharing yeah you're on top of it also you can share your shoulder pad session so I'm going to give you the prompt and I'm going to let you figure out any other information you need to get started on this I'll give you I'll give you one example too so you know about do you know about Aquarius drinks if you search on Google and your little question mark Q equals and then what do you search for you so it's any anywhere else that is a question mark is everything after that but today play we're just going to include the question mark in the Aquarius ring so given this as an input we want to make this a multi-line comment given this is an input we want to turn that into an object that looks like this question mark and then for each pair we could just do not split on the equal sign in order to get the key in the value can I assume that there won't be any amber Sands or equal signs in the actual keys and values yes yes the keys and values will be encoded and right so there's a question mark in the beginning and then as you were saying each hand yes all right so I would call this song called Clarity string still taking a string python so I'm sure there's a nicer way but I would just strip off the question mark then I would just split 8% well I can just use this input if you don't mind I'm just going to get rid of the actual clear Okay cool so that works for this case do you see maybe Any Corner cases where this might fail or are you happy now is there were no input time so I don't think there's any edge cases as long as there's but it's perfectly valid for the query to be empty so that would mean yeah there are no key value pairs the input would just be a question I don't know and therefore you can try that out and make sure yeah yes have a key that does not have a corresponding value so let's say bass in that case we want the value to default to the string true all right now period stop call the pair after I call that split the split pair and then it's like one length is not to it's probably one I didn't check that just for like a little bit of Education and then I'll put the same statement to check if it's a empty string lights off before we move on to the next part of this question cuz that's a little tricky I want to push you to simplify the logic that he have in here I see some question mark sorry then that'll be okay yeah I don't see it immediately could the value be at the string or the volume louder appears multiple times we want the corresponding value in the resulting object to be an array of all of the values associated with that key in the order that they appeared yes yes it's a little awkward I was just saying call you wanted to do it up here too right yes thank you so sorry I got distracted anyway I'll check if the output es is a string already if it's a string then I'm going to do something that's right oh no no no I think it's undefined first cuz I don't think you can do well I guess type of undefined undefined right you can also you can also just check if it's strictly equals undefined yeah okay there's some some boring historical reasons as to why the type of check is a little bit better but checking with strict equality is totally fine turn off so if it is a string that's between the right so I'll let you down be an array holding the original string and then that all makes sense do you want to test this out a little bit example and all the cases or is there some Corner case where we lost support for one of our features I don't think so I think it's okay if you have a double key and an empty string Bell I still think you don't want any empty string Keys even doubles still I don't think you want that right now equals hello and full we expect to get true and hello but I don't believe we do specified twice but in that case we're losing the first Associated volume OK Google do you have true for every pair with every key without a pair value cool so that looks good we have a little bit of time left for this problem so I think we can go to the final stage of the final level all right so remembering all the features that we have for for this training in the shape of an object as you saw before let's create the original query string and it'll take an object which I will call first maybe not the most clear but I like it first okay so for this we have to go through every key value pair and just add it on to the end of a string informant equals value the order we really only care about Preserve in the order in the case that a key has multiple values so we want to preserve that order but in terms of the order of different key value pairs we don't we don't care so you want the the keys with one value to be together they don't have they don't necessarily have to be together but the values for repeated Keys have to be in the same order that they were in the the past object that doesn't seem too hard to me so strange then for now in Valerie stop key plus equals 9 + 1 and then again I'll just returned question mark well we need to pass on an object to this yeah sorry I passed in the past string passed by my previous function sure okay cool Apple and I can also happen to hear ya can you do this without without duplicating the code because I trust you to get a working by putting the clothes a little bit and have that feature the code for that feature in one place and not two places so this function is going to put key value pairs into queries I don't know if this is like a practice but I wanted to clear it inside the main function tonight I will and we have all of that in there and we have great yeah just order Okay so we've got the corner cases pretty thoroughly mapped out we did touch on one more thing that would be an obstacle for you to ship this into production or release this is release this is some some package that other people would use yes so there's there's something still quite limiting about this this approach it's not performing using this in the in the real world and wanting to encode really arbitrary keys and values and Aquarius string can you think of anything else that we might want to add to this specifically for the second function well both of them really and this isn't a new feature this is this is this is a if they're still there still a bug with some inputs so what if I can you can search for you question mark is not going to have any question mark in any or any value right so how is that possible question mark so I'm down online 115 there is the encode Yuri component and there is decode Yuri component so it's your you know in code and decode respectively for the code for the project here I will scroll up to our first algorithm and we don't need to add this to both of these because I don't think that's what we can skip the actual encoding for that is Let me refresh myself so that's that's the final the final feature got it 3% 3 J or something like that right right so I told you the functions that we can use for this so you'll want to use I'll just show you for it so this is actually and I believe that would do the trick yeah and then without that you would of course get the ugly 8% 3F Buckles in yeah yeah that's a function your anytime you want your you have an Impulse to build some kind of write something to like Escape HTML or Escape things like that on your own like that's really hard problem I would strongly advise that works for both so we would do this the way the way that I did this so I did call the function on the key and the value all right cool so that's the question thank you for that those those those great lots of interesting points and you're in a good place to for this what I wanted to do first this talk about the tell me about yourself question and then then we can get back to the algo here yes please okay yeah how do you fill the tell me about yourself that also requires the the other person to ask questions and that little back and forth I really that's a great Point talking to fast yeah you were almost slurring your words a little bit and I could understand what you're saying and you were still communicating pretty accurately but I think if you were to slow down a little bit I don't know take a deep breath or were you were you nervous or just high energy how are you feeling I think a little nervous okay yeah that's that's totally fine that the only happens I think like just physiologically one of the things that I do that really helps me prepare for big calls interviews things like that is to just really give my neurons a break so that can be like go for a walk outside for five minutes or stare at a wall definitely don't be on your phone don't be on Twitter Instagram whatever oh my God yeah just you know find some way to wind down before the the interview another really big Point too about like the back so your YouTube clone project right that's like a massive scope and really interesting and we I wanted to dig into your your threading the the the the the the comment thread feature having like replies and things like that in time stamps wait did you have threads where like one person could reply to another and then one to another and so on and so forth yeah but not if the comments are made at the same time is it was loaded before the new person starts before the new person reply Okay cool so that's a really juicy problem and I I got the impression that you as an interviewer in that exchange I would have I would have assumed that there were you know pretty significant technical aspects that were overlooked right so you know YouTube scan like of course 100 comments one of the features you're going to need for comments is like pagination and then when you introduce another feature as we are noticing today with this query string problem right you have these these two different features like this defaulting to true and then the supporting multiple values right like those features like when you implement one you could break the other so like supporting threads and then supporting pagination and supporting timestamps like that sounds really complicated and I was hoping to hear a little bit of you know interesting technical challenges that you faced with either the API layer or you know a statement on the front end or you know the database layer right on any any challenges pick up recursive function to display all the replies to a comment it was a little bit tricky yeah okay so there was no pagination right you just loaded everything okay but does it load does it attempt to load all the comments on its own or will it improve will it only do that if the user like clicks you know expand or Scrolls down or something you can there's like a tad you can click on it so obviously like that wouldn't work like I do YouTube scale and that's okay for a project like this but I think it's also really really important so you don't have to build something that's going to handle all those cases like especially the this massive scale of comments but to really to get like half of the value is to acknowledge that like okay I build this it handles these once you get past say like 2000 comments for this technical reason and you know you could explain like oh I didn't get to that because you know it was a it was a pet project or I decided not to write like I felt like you were just glossing over those those technical challenges and I don't know if that's because you weren't aware of them or you want to solve them or what right that to me felt like a blind spot in in the tell me about yourself also another I think untappd opportunity right so you mentioned teaching say you taught physics right yes cool have you taught any of your peers in at Academy or any project that you've worked on right like interesting point to dive deeper on to dive deeper into and and interviews right so you have this teaching background a good engine interview a good engineer is going to of course another stuff but they're all going to be teachable and to be teachable like being able to teach others really helps and then of course once you you know get past the you know entry level junior level Alright you're going to be leveling up your team as you yourself level up and that ability to to teach to you know convey complex Concepts right it is really important and to have that that other that to have that that expertise and teaching teaching physics is transferable here so I think I think any kind of case study that you can imagine any kind of examples little stories that you can tell what would be super interesting in in in an interview like this so you know it's really interesting projects I think I think you can just really enjoy the Point Drive the point home for it by telling some interesting stories about how you've taught your peers and then all so getting into the Weeds about some of the technical challenges because like building YouTube clone of course like depending on the level of complexity you commit to is incredibly Rich it's a very rich technical problem cool do you have any questions on that feedback so that's a really good advice about yourself like that that's a great problem so I I am not sure that I would ask them directly but right like it's it's it's it's a conversation so you can there's there's some signal to you of what is interesting to them in either their you know their their face looks or questions that ask you as you as you're talking so I think that pretty much any interviewer would find both of those subjects pretty interesting it's just that maybe if you get really into the Weeds on some technical aspects say like the YouTube YouTube comment section if you were I don't know interviewing and like mongodb right that's a database company they would probably be really interested in how you orchestrated that on the database side if you were doing this for Facebook they might be really interested in the interactions between the front and the back end right like it's there's like a there's a contacts that's a little bit more relevant based on the company that you're talking to yeah that makes sense yeah and yeah it's a conversation it's a negotiation now cool so great questions Mia and back back to the algo what did you well I want to ask you I'm going to ask you two questions so how do you feel it went like you know strong strong fail fail pass strong pass what do you what do you think you can you can keep it up because I'm going to be making some code changes in the feedback so actually yeah let's let's keep a big picture and then when we get back into it I'll have you share again and I'll show you some code changes so we still have good time for that you can see it right I think was a good job of passing the specs I think test cases yeah but how do you feel like objectively how how did you feel the interview went pretty well so in terms of this question do you have any feedback on the problem before I give it before I get into specifics google.com you did with the format query string and the the other the other problem yes so this one I think is a little bit between like a theoretical like algo late code style problem and slightly in the direction of like practical coding because I was saying I don't think there's really anything conceptually in terms of like advanced advanced concepts that's too crazy here it's really the challenge is really riding elegant code and having in not introducing regressions with each additional phase for the the problem and then visiting those Corner cases along the way so so this one this is actually quite representative of a question that you could see in an interview and then the focus as I was saying would be on envisioning those Corner cases as well as not introducing any questions you know clean clean clean code this could be a pass not a strong pass and to get to a strong pass what I would have wanted to see was the proactivity around envisioning those Corner cases which you would never would you eventually did you came up with the the good Corner cases you're really good about that you're a really good about variable naming but I am still staring at 9:13 this without Ampersand this is actually without question mark but that's that's pretty minor thing that doesn't that's not a big deal yeah so your code was was really easy to follow but I once again I did have to push you to like consolidate your code to simplify it and that's something that I think like proactivity around that would be good too so like once you get to a working solution then you can like start thinking about like does this does this work other opportunities to clean this up right there was like the also it's pretty easy to follow along and that that actually you stuck with the code I think really just the two main things if you're struggling in your interviews is to be proactive about those Corner cases and then also if you're if you get to a working solution and then look for ways you can tidy it Tidy Up Your solution too do you have you have any questions about that yeah do you want me to show you a few opportunities to simplify code here further Okay cool so let's just look at the format query string so up here this this is this is all great slicing splitting and then you're doing this here I'll just get rid of the commented code for a moment so this one this format query string is pretty tidy there's really just one thing that I think could simplify it a little bit further and this is this is just syntax this is pretty minor so okay so valleyside you want it to default to the string true so that can actually be done by destructuring so you have this this thing here and that is let me let me put this up here so you have this let's comment this out for now what you can actually do instead of these two lines of code is you can just do constant key valve equal split pair and yeah if you want to get this this defaulting to true then you can just do it here so that is there's no value in the original array if this array is lovely you get you get all that functionality there and then if you want you can even here so this is kind of like Advanced it's not a huge deal if you don't get that that tide is that a little bit going down to your make Quarry string I'll get rid of some of the code here I'll push you a little bit to come up with the the idea behind this simplification okay so I do like the helper function I think that's that's quite helpful but we still have this like if it's a string do this if it's if it's not a string if it's an array then do the other thing do you think it would be easier if we just could assume that it was an array like if it was just always an array yeah definitely can you make that happen type of Valley Stream vowel equals spell yeah that's cool and then if you want you could even inline this logic period and maybe the only 15 or 20% get all the way to this like final stage of doing the inverse function and I've only had one other person come up with this in code Yuri decode Yuri component right so like this is this is like the final the final boss right knowing that so like this certainly wouldn't fail anyone but like with problems like this they're like there is there is like a certain amount of domain knowledge that can be useful right so this is curious drinking and code Yuri component decoy component that's crazy stuff and then like when your when you're like a senior level especially with front and experience I guess back into you're going to be this encoding and decoding he's going to be like very top of mind so this is something that I can see that I think can like separate June it's a signal of you know like Junior versus Senior level kind of thing so problems can seem easy on the surface but it's the execution that can really reveal the strength of a candidate and you did well but of course for there's there's pretty much always room for improvement do you have any questions so two different questions those feel like very different questions to me about like helper functions and then all address helper functions so helper functions is one of the great ways to separate concerns so on one of the questions that I really like to ask is counting the number of islands counting the number of square Islands in a matrix so there's this really popular leaked problem counting the number of islands in a matrix if you add an additional constraint that is counting the number of square Islands in a matrix then all of a sudden people get really overwhelmed with all the corner cases right so like you want to make sure that the entire square is filled you want to make sure that outside of that square it's always water or out of bounds and then you want to make sure that nothing is touching on the corner there's like a lot of corner cases and with a problem like that if you're considering all of those Corner cases for each line of code that you write I've seen candidates where they spend the entire hour talking about the problem and writing comments and they don't write a single line of code that's pretty rare but like that's the kind of problem that can do that and that's where the separation of concerns really helps creating different helper functions that elegantly break down the problem where you have this little helper function and you only need to think about what's the input what's the output what does it do what's the contract so however functions I my strong opinion is that if there's a helper function that you have thought of and that's useful use it like I haven't seen anyone write too many helper functions ever in an interview so if you can if you can imagine one then then do it in terms of like pseudocode is let me let me get a little bit more General so do you ever feel this impulse more like talk and code at the same time in an interview or not yeah okay so let me replace the word talk with like communicate so the okay I don't need to do that so the priorities that I see is Priority One is code project you can communicate with the code that you're writing or comments that you're writing and if you're following best practices you're not going to be riding a ton of code and not talking at all even if it's a problem that you've seen before right if it's a problem you've seen before you still probably aren't going to bang out a solution without any bugs when you get to when you the times were actually think about like pseudo code is when I don't know what code to write so if I don't know what code to write then perhaps I'll write some pseudocode to help break the problem down or write a helper function and think of the if you don't know what code to write then write pseudocode or talk through it but don't try to talk and write code at the same time that can be that can be like counterproductive yeah so pseudocode on demand talk if you don't know what to write any other questions awesome well Brian thank you for doing this question Justice you did a great job and I think with with a little bit more targeted preparation for the tell me about yourself question and you know any other other just soft skill questions you're going to be able to extract a lot of value from your background and I'm seeing a good level of Baseline fluency I'm seeing a very clear thought process you're writing pseudocode and you're sticking to that you're not diverging and writing some other approach I'm seeing like very good mechanics here and yeah just to get from someone that can like pass in an interview to someone where the interviewer is going to be is going to like fight for you as a candidate the next the next level is to in proactively Envision those Corner cases and tidy up your code given the opportunity good stuff man all right thank you very much for your time and your feedback thank you yeah hey I hope you enjoyed this month interview that was actually in my interview between Brian who's a brand new developer he's trying to land his first position and Matt who has extensive experience in the software engineering industry and he actually helps a lot of Junior developers prep for interviews just like this but he actually created his own platform at coach Matt Ayo and you just practice algorithms and it has a little bit of a Twist it's not so focused on memorizing the algorithms but more focused on learning Concepts so if you want to check that out definitely do so and also let me know what you thought of the interview in the comments I definitely want to hear about it did you love it did you hate it I actually read every single comments so I do appreciate people that take the time to do that and if you want to find a community you're looking for a Discord Community I actually own one I'm going to leave the link in the description but it's a junior friendly Discord Community we have about 2000 members there and we'd love to have you thank you so much for watching us

