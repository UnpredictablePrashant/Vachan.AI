Transcription for C:\Users\ankus\OneDrive\Desktop\AtharvAI\output_audio_files\audio_28.wav:
welcome back to another mock interview this one's going to be a thing level mock interview formation thank you for Lending me one of your instructors Daniel who is the interviewer has been at Microsoft as a software engineer for about 10 years Facebook for about 7:00 so I think this should be a really good mock interview especially if you want to get a feel for what they're like but yeah there's two problems and we'll see how far the interviewee gets good luck all right well thanks for taking time to talk with us this morning this is going to be a lot of fun yeah yeah and I just want to make sure I'm saying your name correctly it's Milo's is that right yeah okay great so you know who you're talking to I've been an engineer for about 20 years mostly at Microsoft and then it Facebook for a long time most of my career is at those two companies on lots of different teams that was at a small a small company here in Seattle for a little while before I then I am head of instruction at a small company based out of San Francisco where a career accelerator called formation and I spend most of my time teaching and writing content and helping people become better software Engineers it's been a ton of fun relatively new at it but tell me a little more about yourself and now I'm currently looking for an employment so yeah basically a new challenge awesome of the day it sounds like JavaScript is a is an okay language for you I have things set up in JavaScript already but if we if you prefer typescript or something else take a look at the question give it a read and then ask any questions determine the point value possible for the word volume OK Google 678 there are values associated with every letter OK Google I'm wondering to myself what words can I make going to be an anagram of the word 100 I don't want you to spend your time with me what format do you want the tiles in like what type of data structure do you want them OK Google turn on the other side so if you want to just test the line like you know we actually want to write the code there okay sorry and comparing that to the weather in the Lateralus of so let's see how this goes so when will Google we don't get those three points so so the underscores come last so I could keep the track of the letters found and the remaining letters if they match the number of underscores then for example for it yeah okay of the underscore in the string so I'm not sure which solution would work better if the string is extra long then it would be looping through something else if you don't use it all the time it's even it's it's hard to remember all the little settlements like you use that every day or you kind of have to think carefully about it Natasha okay so that's what make me so yeah notice that letter values these are not the tiles themselves these are the values of the tiles so so let's just try to return just in case or or how do we know if a letter is not there right like in this case we could have a c or we could have you know so now we can make cat two ways we can make cat and we can also make underscore 80 and in this case we should return five OK Google of course it's going to be presentation so you need to add it up only if you have the character available you're just a sec for just a moment not write code let's write comments let's just write comments so let's explore the problem in a different way because you're doing it in a slow way so let's let's see if we can speed that up by not writing code so so yeah and what are the different situations when you're doing this comparison like what are the what are the different things you need to take into account let's write a simple for love I'm not that big of a fan of four Loops but might be an interesting conversation with the two of them and maybe that's a conversation so okay a little bit more and then we can it's not Optimum but we need to think about that let's play can you tell me why why would you check for the underscores in no no no we're not going to check for underscores there but can we can we make that test at 9:48 strong enough such that at 9:50 all we need to do is check for an underscore or is it strong enough already thanks so I think we can just fall down to the else block and see and check for underscores yeah so I think that test actually is strong enough availability yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah yeah how's the weather and then where are we going to return results so the the top level thing and I see this often is that I think honestly I think there's a reason that this is a common occurrence I think people see somebody who's been doing this for a long time and they see that like you give you give somebody a problem who's like really an experienced coder and they're like oh I can just do this this and then they go and and so you get this impression that somebody who's good should just have the code at their fingertips yeah and I think that's not correct write the difference between somebody who's been doing this for a really long time and somebody who's been who has library of techniques and they're very practiced at selecting the right ones whereas somebody who's got a little bit less experience they might not have the techniques at the ready and be able to pattern match from the problem into what the right techniques are right so you have to do a little bit more you have to think a little bit more about the problem the thing is that like the steps are the same like understand the problems to apply maybe some of them work maybe some of them don't we the ones that don't work out then you're going to make a plan for how to write the code applying that technique the experienced coder is actually following all the same steps even when it appears as though they just went there previous experience my recommendation is that especially in an interview when there's you know there's some pressure or there's at least some appearance of pressure is that you should really be careful to not skip those steps because you'll you'll end up writing code too early and you'll end up having to experiment in code rather than like solving the problem intellectually and then and then writing the code and then the next thing I noticed might actually be a side effect of the first thing is that when you started writing code there were some interesting little inconsistencies one example I'm not going to judge you for not using them but if you're inconsistent it's it as the interviewer I start to ask questions right are you coding with intention right and if and if the style you're writing in has some weird inconsistencies especially at that kind of a level it makes me wonder like have you really solved the problem yet or are you just like trying to throw code at the wall and see I'm not going to judge people's style as long as it's somewhat consistent but again if you haven't solved the problem then you it's harder to code with intention and then it's hard to get those those little details right and when you're as an interview or when you're watching somebody code like it's amazing how much information I can pick up about somebody's house to make sure that the signal that you're sending to the interviewer is actually representative to what you would do when you're coding by yourself without me watching right there were other things you did hear that that seemed like yeah you you you you know our building experience towards becoming a good you know fluent coder but then there were other things that were like oh wait a minute but is this how you're going to write code every day on the job and that's and so that kind of leaves me with some questions but I think it all comes back to not actually giving yourself the time to thoroughly solve the problem intellectually first right and then everything kind of starts to come apart a little bit from their yeah I like like we ended up with a good solution you had a couple of points you were like oh I'm not quite sure if this is optimal or not how do you feel about the solution with respect to like time and space complexity now well it's not too bad hey Google okay yeah I mean so this is this ends up being a linear time linear space I think this is good so yeah I like it what did you notice about how the interview went do you have feedback for me what did ya do you have any comments stop moving forward and I want to keep learning about you so I'm always always thinking to myself what am I learning right now what am I learning right now what else do I need to learn to make a good hiring decision how do I find that out and if I let you sit there getting stuck we are both dead in the water I can't I have to figure that out yet so so I want to let you try to solve the problem right and actually sometimes I give I'll give a hint when it's completely clear to me that the candidate is is knows what they're doing like if I so I might decide hey you need help here and I want to move on to learn something else okay fine I'm going to help you I might also move the interview along if I've become completely convinced that you've got this like okay cool now I'm not learning anything anymore so let's move on to something else where I can learn which was the the values of the of the tiles right and I'm like okay you know what you need I'm going to give it to you because I don't want to sit here and wait for you to type this out right you made a decision it was clear that you kind of knew what she wanted and yeah you said you wanted an array and like I had handy a map but watching you type that out was not a valuable use of either of our time and then there were other cases you know like you know where you would have had this idea of counting underscores but we actually needed to count all the things you know and so that was a place where I was like hey wait a minute let's go back to this idea that you had previously let's expand on it right so that was the case where I was worried that you were going to kind of get stuck longer than I wanted to and so that was a chance for me to like okay no I want to keep this moving so let's go back there and revisit that idea so there's there's an example in either direction like hey you know what you need I'm going to help you along I want to speed this up and another case where like actually you need a little bit of help to move on to the next thing so I can see you write more code I'm done I can't do this you know I've actually in thousands of interviews I've actually never had that happen you know like I've had it happen in classes and teaching or like people I'm mentoring but I've never actually had that happen in an interview but you know I'm kind of a coach and teacher by Nature so you know I if somebody throws their hands up I'm like OK Google is it for in a situation where the person I'm interviewing is like clearly really bad I'll just turn it into a teaching session because Here's My Philosophy about interviewing is that I want everyone I interview to walk out of the room wanting the job I don't care how good or bad you are at the end of the interview I want you to want the job very very quickly it was clear that this person was not going to make the bar like I'm going to give you every chance to make the bar but if it's clear and you know 510 minutes that like this person is just not ready for the position that I'm interviewing them for okay let's work this through this problem together let's turn this into a coaching session you know you're going to take something away from it you're going to have a good experience you know that's better for everybody yeah yeah exactly and even if in the end I say no higher of course I would in that kind of a situation they're going to go tell their friends like oh man I interviewed with this company and I talked to this guy and this was really nice company on and giving this a shot he didn't quite get to the second problem but I think he is humble enough to handle the interview well and he received the feedback pretty well so hopefully this helped him grow but for those watching on YouTube let me know what you think in the comments and if you even want to see more interviews like this also again thank you for Lending one of your instructors for those that don't know formation essentially what I see them as is a company or can an educational program that helps people that are already in the industry that are kind of like junior-level accelerate their careers much faster when you go to their program and you know I'm pretty critical of programs but I've talked to Sophie and Michael who lead that program and they're good people the instructors are all really smart people so shout out to formation thanks again hope you enjoyed

