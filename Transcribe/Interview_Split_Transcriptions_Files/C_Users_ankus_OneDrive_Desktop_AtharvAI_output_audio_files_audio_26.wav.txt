Transcription for C:\Users\ankus\OneDrive\Desktop\AtharvAI\output_audio_files\audio_26.wav:
welcome to my web development podcast where I help aspiring developers get jobs and Junior developers grow in this podcast episode I hosted a mock interview where it's more like senior level for software Engineers that are going into like a algo coding heavy technical interview and for the interviewer I invited Sophie who's the CEO of formation who has created a company does this for a living and she helps a lot of engineers get into more senior roles at larger companies like Google lived kind of just like the harder technical interviews and for the applicant if you guys watch my previous mock interview which is more for entry level I brought Dan my friend done who did the last one to actually be interviewing this time so Dan is a senior level engineer and we're giving him a sin level technical interview so let me know what you think let's jump into it hey Dan hey Sophie good to meet you super excited to be chatting so I see that you're currently an engineer at coinbase right so I'm going to coinbase as a friend and developer for about 8 months prior to that I worked at an education startup in Chicago for over five years right kind of saw that project go from like zero customers to this like actually like legit platform that's that's used by high schools in the US very cool okay well very excited to learn more about that just to give you an overview of your career history and along with some of the stuff that you're doing currently at coinbase and and most of this time on can you briefly describe kind of the team that you're on at coinbase and and the work that you're doing their yeah for sure So currently on the growth team so that really it involves like making sure that people that sign up for the platform start interacting with the platform so for instance like you know making sure that people make an account by crypto set up recurring buys really just engage with the platform and I primarily work on the react native app but as well to have fun fact I actually had not used react native before Queen's had to like learn it all on the job and it's been it's been super fun I've just been having a ton of fun like learning a new technology cool can you tell me a little bit more about kind of what your process was getting ramped up on you yeah for sure so thankfully the promise of reacts like learn once and write anywhere is actually true so like it does feel very comfortable going from read web to react native cuz like you're still just writing react also we have like a super robust design system at coinbase so a lot of the you know it's like with react native you don't have access to like all the HTML elements but like it doesn't matter because we have like just component design system components that we use for most things and yeah I mean aside from that there's there's a lot of like really awesome react native developers that are there to help people out we have like mentors who essentially just are there to onboard people with react native because yeah like react why there's like so many reactive developers I feel like react native is like definitely less you know there's like native modules and you have to like go debug I haven't had actually had to like write native code but I've had to like debug it just to like make sure that you know I mean it's been more like understanding what was causing like my build to not not build correctly and yeah usually it's just like okay like maybe it's like some dependency that I'm missing or something like that CSS and all the things that you can do react native CSS is extremely limited so it can be much more difficult to like precisely like style things but again thankfully you know we have a really robust component design system so there's not a whole lot of stuff going on yeah I think a lot more flexible because you know with mobile I feel like all platforms have more like established patterns for each platform so that makes sense I guess going back to so you are at Albert for a bit before looks like you were at glass door for some time at glass door between base and what motivated you to want to make a recent change the recent change between glass door and and coinbase I mean so yeah if I'm being honest like it was a great like love the people at Glassdoor but I guess it's just the code base wasn't what I wanted to work within I found it like with the text back or no I mean it was like a react text back but the like the client server and like a lot of the foundational Pieces Just were not very like you know like in house built and I personally just didn't feel very productive so I was like you know I kind of made this decision of like I haven't been here for that long and I feel like if I stay any longer I'm going to be here for like you know two plus years because I have like a track record for actually staying in places for a while so I was like yeah like I don't know I feel like I could go I could look for something where I find myself being more productive and thankfully I had a friend at coinbase I was like yeah like it's super chill here and like yeah like the code base is great you know like I mentioned there's a lot of like awesome like developer productivity things that just make it easier for me as a you know individual contributor to actually contribute those those features that we're trying to build well let's maybe transition over into another coding portion of this call so I think maybe you could go ahead and share screen cool I believe that should be up on the screen awesome so the problem that we're going to work on today involves strings so dictionary of words but it really just as an array of words I guess and what we want to do is fill in two functions so one function is going to be called set up and it will take this input dictionary of words and a second functionally in the input dictionary and it will return false otherwise and the goal is to do as much work as possible to function okay so I think I understand is indict because essentially that's you know given a word it's going to return true or false whether or not that's going to be in one of the original input words so could you explain set up a little more like what like why do I need to set up so it's going to give you the list of words if we did so you can either stop you cool I I mean I want to I feel like I want to set this up as a class because it feels better to like encapsulate like a dictionary in a thing rather than have like this Global variable so let's do this and I guess what it makes sense to like what I should I be able to call set up later and like reinitialize the the dictionary or something like that like not necessary and the reason I ask is because if we set it up as a class then you know we can just pass and set up having a setup we could just pass the input to the class constrictor and initialize the dictionary that way daylight test is on your dictionary with the words and it's going to be an array right so cats are and bar and then we want to test well why don't we like console logic I mean I just want to reach for a set I guess here so that's not the right way that's a word array I guess and I want to say that with spread it not totally sure about that but I think that is how we do it and then we can say return this dick dudes word right now there's like maybe like three things that I would want to look look up on mdn but let's run it and see what happens includes is it so it doesn't have done so let's oh my God cool so we can remove the console log and then that's a cat is in the dictionary Don is not I will say that I do feel like using a set is kind of like cheating since it includes like is indicted essentially has and the dictionary is essentially a set of the problem a little bit so now let's say that word original dictionary period maps to one of an existing character so this would return true and I guess one character at that place in the string right now so my first some being like arrays because I don't know what methods think we could say so honest template equals word we're going to replace that star with dots template how that works all this work so cat should still be true period false wow that was I wasn't confident not going to lie so let's say r a t so it should be amazing true true true true that one should have oh because it needs to be Global so we're going to do well can we use play all I didn't know that was a thing oh my gosh that works okay cool but kind of like kind of like this said it's like oh you know like the question is clearly asking if we can do this without a regular so yeah I mean do you want to try to do this without using like a dynamic I think you're muted yeah so let's try something else going to be I mean the Constructor just you know sets it to be an array that would be a one but then some would be oh and since we have to iterate through every word in the words of Ray and then where I kind of like where I guess just the answers I don't know is actually have no idea what the time complexity for regular Expressions is so I know that the sum is on but then the fact that we're doing a regex inside I'm sure like tweets that a little bit but yeah I've actually yeah I've never looked into actually still want to kind of try to do as much work as possible and see accumulator and the word then we can say accumulator word equals word return accumulator now instead of a word array we have we essentially turn this like cat Car Bar array into an object of key is cat values cat he is car values are or car and then he is Barbies and we do have to iterate through the array once but essentially we are only now iterating in the Constructor rather than iterating in isn't it which we would potentially be calling multiple times so the value of that is that now if the word does not have wild cards we can look and then it is in the dictionary we can automatically yeah and we could even go of a Step Beyond that and say like if like word if the word does not include a wild card and then we would only have to like do the more like the heavier operation if we are if we do have to match on wild cards so it is function at this point so like it kind of depends it's like the complexity kind of depends on the argument where ya like best case it's so one and then to check if it you know if it has a wild card that would be o n and then if it does have a wild card then it would be whatever the 01 Plus or times the Red X solution like equals so I guess is there any way that we can optimize this even for the case of a word that contains a wild card let me think my I guess the first thing that comes to mind is to like I don't know why I like just came to mind if we if we represented the words as trees could we do this in oh and time can you describe what you mean by tree can we I know that we can get this to on but I'm not sure if we can like is is Owen the best case scenario here is when you say end do you mean as in the number of words in the array no sorry the number of letters in the word okay so how do we cuz right now what is the number of words in the dictionary reducing from and to K is a significant reduction gotcha say like how can we represent the setup words so that we can then actually only iterate through the individual letters in the incoming word may not need to iterate period if you like so I guess thinking about so let's imagine that the word only has like the the single star character right now we have a pretty pretty complex character what are all the possible possible how many possible like words are there in the dictionary in the original dictionary match for sorry can you repeat the question how many possible I guess yeah so I guess what would be if you if you manually checked all 26 of those of those letters yeah what would be would be the run time involved I mean I feel like this is a trick question but I mean it would be like oh 26 which we is there a way that we can actually further optimize as such that we don't even need to Loop through that like is there a way that we can get something stored in our dictionary such that we all we have to do is a very simple lookup something stored in our dictionary and thinking about like cat for example for the word cat like sorry can you use that use that in some way to try to shift as much work as possible yes yeah I mean it feels I could be wrong because like again this is not a solution that I never really thought about before but like it feels like a lot of work in the Constructor cuz we're essentially creating like a dictionary of every possible permutation for the wild cards but let's do it whatever OK Google now so it would be the length of the words array and the ya like now it almost depends on the words right and the individual but it does give us then 01 for isn't it so cool I mean I'm down let's do it so sweet so now we have our word map is going to not only store the word but then also let's say word Blitz or each letter and I so let's think I guess we don't need a partial word it's word martial word at I is space do not assigned to read only property 0 of string lights is there like a replace character at can we slice cool so we want I'm actually going to do this in console here so we're going to save our word equals hello 5 + 1 can you still see my screen Logistics we actually want this to be four hey sweet sweet how might you adapt this algorithm to work if there were any number of wild cards that could come up in the is indict function yes so I think that you know like building every permutation and storing that in our dictionary just might be like it might be a lot so if there were if we had to support multiple wild cards I'd probably go back not to like a regular necessarily but just something that like iterates through the letters in the word and I guess the idea that I was playing around before was like could we make like some sort of object like this and like honestly like I don't know if this would work or how I would go about actually implementing it but it's actually building like a character map of like the words and lake so I think that the example like explains it better but the for instance is the third then you would have to just like I guess skip it and potentially look up the next character find the ones that have the next character in there I feel like that might be I don't know if I would give us like an actual advantage in terms of time complexity if there's a lot of wild cards is there eventually like a set of requirements were just like iterating through you know the words in the dictionary like character by character like eventually becomes more beneficial yeah so the one thing that you can build on top of what you were building with the object you could actually have an explicit star character which essentially is like very similar to what we did here in a dictionary or a set but instead of having just like you could also build up all the like versions where each each letter also has a star so that you can actually just step through yeah that's like one thing that you can do but then also like building up the the the the dictionary of all possibilities is obviously not probably something we would do in practice but for the purposes of this exercise could also work cuz it's still owe one look up right yeah well cool yeah I guess that was the that was the problem I don't know if I would have come to the conclusion of initializing the dictionary with the wild card on my own I feel like yeah like the the trade-off there of building this potentially like very large object up front versus and getting that 01 look up time in the isn't dick function and you know just why isn't it function have to do a little bit more iteration yeah for me it's like I don't actually know you're trying to optimize both the the solution that you were proposing yeah of course we could do that so that's yeah I'll definitely keep that in mind whenever I'm doing like stream manipulation stuff in the future I worked on a text editor like quite a lot so and that was very like space so I always asking people don't try to do that because they assumed worked on a text editor for a very long time but I mean so that's solution does any word have you know like does it start with a c at the sendex or but like the time complexity that would be like absolutely garbage yeah we just like iterating through every word in the in the setup array how did it go I think it went pretty well I have lots of Commons probably the thing that would make me lean towards yes because I clearly this person knows how to write code in production so I think a few kind of comments and you want me to do this here and not likely I'll show them the comment and you guys can talk afterwards so I think to start from the very beginning I think I actually probably would have gone typically pushed more in a real interview but I did want to focus as much as possible on the coding portion I think that I think one of the points I wanted to make is anytime like there's like really short cancel my appointment like you're always going to be asked about it it's not a problem but you're going to need to explain and I felt like the explanation was slightly negative and I always think that you should try to frame kind of what you wanted out of the next position rather than what you didn't want from the current position like you can always make the exact same statement more in the positive sense but I don't know about glass store saying like I was looking for a code instead of like I wanted to get away from code base that did why so that's like I think just a very easy shift to you can always restate anything that's negative to the positive by doing that but I don't think it was extreme so totally fine just a little note I think during the coding portion I felt like overall one of the weaker points of the interview was actually just collaboration and in questions ahead of like each segment where we code it I feel like every time I presented something it went to code pretty quickly which meant that I didn't have I wasn't able to kind of guide directionally liked it because he just started coding right away so a couple of examples are there's like some things where like education for example like with string questions like asking about case sensitivities like one that's that's the same word I think like that and kind of aligning on approach before going to code for example with the regular thing it's like you know it might take a few minutes the good thing is he did really really fast so I actually don't think it hurt him at all and in fact it was one of the reasons I like it is actually there's just like a lot of different optimizations that you can make and there's a lot of analysis that we can have in conversation that's outside of code so and then I wanted to point out one particular kind of segments of the interview which was the I think in inevitable trough that every good interview I think has which is when you're totally lost and how you handle that I think is one of the most important like behavioral like pieces of performance wise that you can have and I think Dan did pretty well there but I think I think it was kind of like neutral maybe well like I think there was and yeah I think that I think just going into every interview kind of like with the expectation like I'm going to be in a moment where I have no idea what to do and just be ready to like kind of like have a positive attitude working through it rather than like I don't know but again I actually don't think it was extreme overall I would have gone yes in this interview these are just some minor flags and then the impressiveness of just an execution speed and and and and the code generally kind of clearly okay that was a lot of really good feedback I know damn person is going to really appreciate that is awesome what kind of and what level of positions do you feel like he would be qualified for in this company so I would say that Cody buckets based on the coding interview if I was doing that all right if I wanted to do that I would definitely have to push a lot more on the behavioral portion of the interview so there's certain types of interviews where like the expectation is like maybe 80 to 90% like just coding very light a particular project so and I think more senior people that like will face that more on the other thing is systems design interviews are better at judging seniority I think than just the coding but I would say that based on like the resume alone but then also kind of like the fluency of the code and how like clean the code was like tell me indications that this person seems to have worked in like a high-quality code basis before and it is really like solid so yeah I would I would say there's not a lot of signal on lights in you already but you know I would say that this this passes the bar for like a senior-level coding only interview and I wouldn't rely on other interviews in the loop for other skills important to senior Engineers okay all right well thanks so much play Sophie I'm going to toss you out and bring him in stick around for a little bit if you can and will bring you back in all right how's it going today help but like the fact that like we were able to proceed through the interview and kind of like knock out some of those initial requirements yeah give me like a pretty good yeah I feel I feel good I think it's funny cuz like once you know like there was that moment where Sophie was kind of explaining or like almost like leading me to that most optimal solution and it was like hard to like she clearly what she was talking about him she you know like she had this idea in mind for like a way to do this and like what ultimately ends up being like Oh one which is awesome but for me it was like oh man like what's she trying to say like you know it took me a second to get there but yeah like once once we got there then I was like oh cool I understand what you're saying and that's what's really funny about stuff like this because like it's like the concept is the hard part like the code is I mean yeah at this point it's been yeah I've been doing this for I've been writing JavaScript for long enough for it's like I can translate the concept into code but if I don't know the concept well I'm going to struggle but yeah I know I feel really good about it yeah and I was just actually thinking of just like oh what other ways can we do this and yeah I feel like I thought of an interesting one I might ask Sophie what she thinks later okay that sounds good and yeah I'm glad you did struggle a little bit I know she would be the person to challenge you I knew she'd be perfect for it and you know a lot comes out and in an interview and just even like how you handle the situation even just you know working with her to be able to figure out the optimal solution that she's aiming for and how you go about it it's really interesting to see that because a lot of people struggle with that concept I think a lot of people are gonna love to you know what she worked through that but what are like what's one main thing that you can improve looking back at your interview so let me think I mean I think I kind of hinted at this towards the very end when Sophie asked how it went but I have like you know you tend to fall back to the tools that you're familiar with so to be honest I don't know if I would have come to the you know dynamically building a dictionary with wild cards included because like that's just a concept that I haven't like thought of so I think just like trying to broaden the scope of potential solutions for stuff like this would be helpful for me because it's you know it's one of those things where like you don't know what you don't know and now I'm like oh cool yeah like you know this solution makes sense I can probably like you know I'm likely we're going to have to solve this exact problem in the future but one similar to it might come up and you know if performance is you know Super Paramount then yeah maybe like doing a lot of upfront work so that you can get those that improved performance on the line might be like a good way to think about things and I feel like this definitely taught me that cuz like even with the original question you know like my mind was immediately like why do I need to set up function like we can we can we can literally just take the array do a do an includes or whatever but like yeah like maybe oh and isn't the best solution like maybe there's an actual like benefit in having this be like oh one you know but I think that was like probably my biggest takeaway okay all right and I'm going to share the feedback that she shared as well like it was fun to watch so I guess one more question for you going to this interview what impression do you feel like this interviewer gave about the company that she's recruiting for so I mean if I was interviewing for a like front end position I think that this might be like you know not the most ideal just because like this is not very like fun and related and it's very like it's superhero have that said I think that this kind of question to me like suggests that they're looking for people who have like a very strong understanding of like fundamentals and it's definitely not going to lie I was just a super interesting problem so like I had fun with it also the general I guess the general format I enjoyed it was very like you know collaborative which you know made me think that like the person that's actually interviewing me is also like you know highly technical which is always appreciated yeah I think yeah if I had any feedback it did seem like we were I guess like driving towards a specific solution and it was maybe like more difficult to like I didn't I didn't know that up front and maybe would have rather like you know been told that a little bit more explicitly but I mean overall I think I had a really positive experience that's the end of the interview if he liked it please consider liking the video it really helps boost the video in the algorithm and I really appreciate Sophie and Dan for doing this it's really hard to do something like this on camera in front of thousands of people so you know props to both of them but you know Sophie is the CEO of formation and you know what they focus on is helping early software Engineers prepare for kind of like mid to senior level roles and Technical interviews especially harder to get into companies like Google Lyft etcetera so you know if you feel like you need that extra feel free to check out for me it's for you maybe it isn't but check them out but either way I'm going to go ahead and Link their socials end the description below the very least I'm probably going to link their LinkedIn so you can connect to them there let them know what you think but more importantly we're probably all going to be checking out the comments so please leave a comment let us know what you think of it and if you want to see more mock interviews like this let me know as well thanks for watching everyone and I will see you in the next podcast episode

