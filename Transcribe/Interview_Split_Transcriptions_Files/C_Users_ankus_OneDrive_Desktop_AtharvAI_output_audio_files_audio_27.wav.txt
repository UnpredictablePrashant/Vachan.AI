Transcription for C:\Users\ankus\OneDrive\Desktop\AtharvAI\output_audio_files\audio_27.wav:
all right welcome back to another thing level mock interview for this one we brought on someone that wanted to come on he's a current coding bootcamp student so he's still pretty early on in his process but he's been a part of our community for a while and I just want to give him the opportunity to you know try this type of interview out see what it's like see what he still has to learn just a heads up just turned into more of a coaching session but I feel like a lot of the advice and the way that Daniel guide him through is pretty solid and I think it's going to be helpful for a lot of people out there but Daniel is going to be the interviewer he's been a software engineer at Microsoft for 10 years he's been a software engineer at Facebook for seven years and then he's currently at formation just helping people accelerate their careers so hope you like it and enjoy all right well hello Friday afternoon maybe where you are it's Friday afternoon here so happy Friday happy Friday around 4:00 in California again thanks for taking the time to spend with us and work through a problem I hope this is a lot of fun just a little bit about me so you kind of know who you're talking to and in case you have any questions I was a software engineer for about 20 years I mostly worked at Microsoft and then Facebook for much of that time and then a couple of small companies since right now I'm actually at formation which is a career accelerator and I'm working on instruction not engineering so we have an engineering team but I actually work on teaching and building content and helping Engineers so that's kind of my story this is going to be a a pretty much straight up coding interview I have a question for you all ready to go in the coderpad so unless there's any questions that you have you can get the problem a read and then hopefully you'll have questions at that point oh yeah let's go and get to the problem then yeah sure so have the quarterback lowercase letters only letters plus underscore determine the point value possible for the word Jenna score represents a blank tile that can stand in for any letter but has a 0.54 and I guess the example the tiles are t m o c a and the result is 53 + 1 + 1 equals 5 awesome a little confused that's ok Google so it's possible for us to make the word and the total score we will achieve making that word is is 5:00 so now let's look at the second example we do have an underscore so now this time we can still make the word but we don't score that three points for the see the underscore as kind of a wild card so it's kind of like a Scrabble game I was a little confused about the second example with you okay thank you completely and like I said on line two the word will be lowercase letters only and the tiles will be lowercase letters only Plus on their score about you know throwing in white space or capital letters that doesn't make the problem interesting it only makes the problem annoying right okay so yeah the first option that I see the solving this is just taking the the word that were given and just entering over each letter and that's on each letter a value to to give the results in some other options I think it's kind of like an object where you put in with you so we can do something like that in this case to solve the problem like what are the what are what are going to be the keys and what are going to be the values and how is that potentially going to help map return one but I don't know if that's too too much I mean there's pros and cons to everything right that's why this is engineering okay so let's go with that one will be a function OK Google oh like are you asking if if it might not be possible to make the word yes yeah it is definitely not always possible to make the word okay so I guess if word does notes of examples of interesting cases so you just correctly identified one of the other cases which is hey wait a minute we might not be able to make the word cases set another alarm for our understanding of the problem in this but we should be at this point it's really exploring the bounds of the problem in our understanding of the problem right okay some Chinese so what do you thinking about just nothing nothing nothing crazy examples comma the only one that was like if you had all mild tiles how many 12345 at what point do you know if you're not going to be able to make the word at the beginning when we receive our parameters how do you know right at the beginning or how how will the computer know right at the beginning if the word has the the tiles in the word okay can you express by the way that's not a challenge to see if the letters in the word are and if it is possible it needs to total up the number of points available right okay right we could potentially do that as two different steps like hey is this possible check it out right and then as a second step hey if we know it's possible let's find the score or we could actually do these in one in one pass in one step but both of these both of these operations are going to take more than one line of code so yeah I think separating it would be better for me now I'm not too sure how to do this and actually I might even recommend at this point that we don't write code that we actually write comments and we actually experienced the ideas we want to express and we can iteratively break those down to a level where they can look more and more like code what do you think the steps are going to be to accomplish initially I was thinking of going through the word possible and then we got to figure out if that letter is in our tile set okay yeah so like I think line through the comment on Line 39 we're actually going to do something similar right right check to see what the values are this time but like hey do we have that letter okay yeah so if I do here one question what's the see ya would that works mostly works so if it's a Boolean function there's one return statement and that particular return statement always returns true we probably want to return false at some point OK Google now let's jump back down and and start thinking about using that okay puts words so if you call the kids let me see how many times do we want to call contains so this one and check if this is how many tiles call contains more than once are we are we going to eat or 8 over tiles and call it once per tile or we can order it over words and call it once per letter in the word OK Google where will say if the future night and when it returns false what can we do at that point so if you then we can do the next step the summing total and how many times does it have to return to the whole world what what what what is the array we want to pass and what's the character we want to pass okay so I guess they would be we know that it's possible not a minus one right yeah okay so let's let's run this week's weather tomorrow do you have any tiles and how do you want it you can hit the Run button up at the top okay actually minus one is right we just didn't update our expected results to get that did we get it yeah yeah okay all right so far we're passing a couple of test cases let's try a couple others wild card in place of the A and then in this one we would expect a -1 because we don't have enough A's actually let's put the a back in here to make it a little easier to understand what's going on in this case we still going to want a minus one because because we don't have enough eggs okay how do we how do we need to change this to start handling some of these other cases so we haven't done anything with wild cards I guess for this that contains if can we put for you right because what we're doing is we're taking a function that had a very simple idea and we're making that more complicated and then if that doesn't give us what we want we could try calling it again with an underscore it's like oh you didn't have a c okay well maybe that's fine do you have an underscore okay we can just call the function again and that keeps our our function really clean and simple and single purpose right and kind of makes it easier to test easier to debug easier to reuse I love functions are very short and simple and expressive single idea clearly okay yeah we could well is it yeah okay yeah that one right so why am I bought something we don't even expect to get to the part of the algorithm like the Step 2 online 52 we're not even expecting to get there but in fact we are getting there because we return to we need to know if we have enough of them yeah so this is where we might want to use a map or if we find something that we can use we might want to remove it from our tile bag right like once we find like oh we're going to use a c OK Google if we use a wild card okay well now we've used it we can't use it again so we need to either modify our tiles array by removing things once we've used them or we need some other strategy and here's where the map your map idea from the very beginning this may come into play because if we have a map that counts the number of tiles we have oh we have one underscore and we have one t right once we use the TV we can change that one to a 0 and now we know we don't have any more okay and that's fine okay so the bottom line is you should definitely be very comfortable with maps because that is something that comes up especially in front end development you know when you're when you're working with information can being handed to you by by a user who's actually like hammering on the app like these they come up all the all the time so you know kind of as a sort of a strategic thing definitely practice with maps the second thing is and and this is a really common common situation especially in interviews and I see people all the time take a problem before they've thoroughly understood both the problem and to understand the idea that they're about to implement in code if you don't yet understand the idea of the algorithm there is no way you're going to get the code right with any reasonable probability are you always have an idea an intention when you go to either write a function or even make a change to a single line of code your idea might not may or may not be right and that's okay right like we all right bugs from time to time but if you're not writing code with intention then it's hard to even know if what you wrote is good or not like I intend to write this okay for this reason does it do that does it get me anywhere towards my goal right now you can ask a question right and so even if it doesn't work you have the opportunity to be productive right but if you're writing code before you fully understand the problem and without intention then it's really hard to even ask yourself a question of like do I like what I have do I think this is going in a good direction because you don't have something to compare it to you don't have the line of code and that immediately tells me that that they didn't write that line with intention right because I can read the code too but what are they trying to accomplish like what is that supposed to do like why are we iterating through an array right so getting really clear with and clearly delineate the steps in your problem solving process you'll you'll make fewer mistakes and you'll actually turn what might otherwise be a mistake into an opportunity we have a limited amount of time you know to talk with each other this afternoon and you know in a real interview you know this might be the first one of four or five right so after this one like we have to be done because the next person is going to like be jumping onto the call so there is time pressure and that's real right and so there's this perception that what you better just hurry it along and write the code but if you haven't like intellectually solved the problem yet you're probably actually going to take more time because you're going to make silly mistakes all right that was the interview so I mean kudos to 10 he's still going through his current coding boot camp and he decided to take a challenge that does very very difficult so and I think he handled it really well he's a he's a humble guy and I appreciate that I think a lot of employers are going to appreciate that so good luck with your journey 10 hopefully this is helpful this was problem one out of two so we've had two people so far that haven't gotten to the second problem but we are doing one more mock interview that's going to be released in about a week from now and I'll give you a heads up this person we already recorded it this person did reach the second problem so you're going to get to see that but yeah shout out to formation I appreciate you know Daniel coming on and doing these mock interviews so yeah that's pretty much it is let me know what you think of the comments I'll see you in the next interview

